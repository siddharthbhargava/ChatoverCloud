/**
 * New node file
 */
var express = require('express');
var routes = require('./routes');
var http = require('http');
var path = require('path');
var ejs = require("ejs");
var app = express();
var customer = require("./routes/customer");

// all environments
app.set('port', process.env.PORT || 3000);
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'ejs');
app.use(express.favicon());
app.use(express.logger('dev'));
app.use(express.json());
app.use(express.urlencoded());
app.use(express.bodyParser());
app.use(express.methodOverride());
app.use(express.cookieParser());
app.use(express.session({secret: '1234567890QWERTY'}));
app.use(app.router);
app.use(express.static(path.join(__dirname, 'public')));

// development only
if ('development' == app.get('env')) {
  app.use(express.errorHandler());
}

app.get('/', routes.index);
app.post('/customerrequest', function(req, res){
	  //res.send("respond with a resource");
	console.log("Inside Customer Process Request");
	if(!req.body.hasOwnProperty('message')) {
		res.statusCode = 400;
		return res.send('1, Error 400: Post syntax incorrect.');
	}
	console.log("Message from Customer : " + message);
	res.setContentType("text/xml");
	res.statusCode=200;
	res.setHeader("Cache-Control", "no-cache"); // HTTP 1.1
	res.setHeader("Pragma", "no-cache"); // HTTP 1.0
	res.setDateHeader("Expires", 0); // prevents caching at the proxy
	// server
	res.setHeader("Cache-Control", "no-store");
	res.send("0, Message acknowledged from server" );
	res.end();
});
http.createServer(app).listen(app.get('port'), function(){
  console.log('Express server listening on port ' + app.get('port'));
});
